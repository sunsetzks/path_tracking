cmake_minimum_required(VERSION 3.16)
project(hybrid_astar_ecal VERSION 1.0.0 LANGUAGES CXX)

# Set C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# Build type
if(NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release)
endif()

# Find required packages
find_package(Threads REQUIRED)

# Find required eCAL and Protobuf
find_package(eCAL REQUIRED)
find_package(Protobuf REQUIRED)

# Try to find hybrid_astar_core package
find_package(hybrid_astar_core QUIET)

if(NOT hybrid_astar_core_FOUND)
    # If not found as installed package, try to find it in the workspace
    set(HYBRID_ASTAR_CORE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/../hybrid_astar_core")
    if(EXISTS "${HYBRID_ASTAR_CORE_DIR}/CMakeLists.txt")
        message(STATUS "Found hybrid_astar_core in workspace: ${HYBRID_ASTAR_CORE_DIR}")
        add_subdirectory("${HYBRID_ASTAR_CORE_DIR}" hybrid_astar_core_build)
    else()
        message(FATAL_ERROR "hybrid_astar_core not found. Please install it or ensure it's in the workspace.")
    endif()
endif()

# Include directories
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)

# Add proto subdirectory
add_subdirectory(proto)

# Include generated directory from proto subdirectory
include_directories(${PROTO_GENERATED_DIR})

# Visualization library with eCAL
add_library(hybrid_astar_visualization 
    src/visualization_publisher.cpp
)

# Link libraries
if(TARGET hybrid_astar_core::hybrid_astar_core)
    target_link_libraries(hybrid_astar_visualization
        hybrid_astar_core::hybrid_astar_core
        hybrid_astar_proto
        eCAL::core
        ${Protobuf_LIBRARIES}
    )
else()
    # If built as subdirectory
    target_link_libraries(hybrid_astar_visualization
        hybrid_astar_core
        hybrid_astar_proto
        eCAL::core
        ${Protobuf_LIBRARIES}
    )
endif()

# Add examples subdirectory
add_subdirectory(examples)
    
# Install targets
install(TARGETS hybrid_astar_visualization hybrid_astar_proto
    RUNTIME DESTINATION bin
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib
)

# Install headers (only eCAL-specific headers)
install(FILES include/visualization_publisher.hpp
    DESTINATION include
)

# Install cmake config files for the eCAL package
install(EXPORT hybrid_astar_ecal_targets
    FILE hybrid_astar_ecal_targets.cmake
    NAMESPACE hybrid_astar_ecal::
    DESTINATION lib/cmake/hybrid_astar_ecal
)
